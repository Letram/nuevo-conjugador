//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConexionConjugador
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nota", Namespace="http://schemas.datacontract.org/2004/07/ServicioConjugacionWCF")]
    public partial class Nota : object
    {
        
        private string DescripcionField;
        
        private int IdNotaAgrupadaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion
        {
            get
            {
                return this.DescripcionField;
            }
            set
            {
                this.DescripcionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdNotaAgrupada
        {
            get
            {
                return this.IdNotaAgrupadaField;
            }
            set
            {
                this.IdNotaAgrupadaField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfoConjugacion", Namespace="http://schemas.datacontract.org/2004/07/ServicioConjugacionWCF")]
    public partial class InfoConjugacion : object
    {
        
        private string FormaField;
        
        private int FrecCREAField;
        
        private System.Collections.Generic.List<int> IdCategoriasField;
        
        private int IdFlexionField;
        
        private System.Collections.Generic.List<int> IdNotasField;
        
        private string InfinitivoField;
        
        private int SumaFrecField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Forma
        {
            get
            {
                return this.FormaField;
            }
            set
            {
                this.FormaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrecCREA
        {
            get
            {
                return this.FrecCREAField;
            }
            set
            {
                this.FrecCREAField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> IdCategorias
        {
            get
            {
                return this.IdCategoriasField;
            }
            set
            {
                this.IdCategoriasField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFlexion
        {
            get
            {
                return this.IdFlexionField;
            }
            set
            {
                this.IdFlexionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> IdNotas
        {
            get
            {
                return this.IdNotasField;
            }
            set
            {
                this.IdNotasField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Infinitivo
        {
            get
            {
                return this.InfinitivoField;
            }
            set
            {
                this.InfinitivoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SumaFrec
        {
            get
            {
                return this.SumaFrecField;
            }
            set
            {
                this.SumaFrecField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ConexionConjugador.IServicioConjugacion")]
    public interface IServicioConjugacion
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConjugacion/ConsultaDefinicion", ReplyAction="http://tempuri.org/IServicioConjugacion/ConsultaDefinicionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ConsultaDefinicionAsync(int idDefinition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConjugacion/ConsultaNota", ReplyAction="http://tempuri.org/IServicioConjugacion/ConsultaNotaResponse")]
        System.Threading.Tasks.Task<ConexionConjugador.Nota> ConsultaNotaAsync(int idNota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConjugacion/ConsultaVerbosConNota", ReplyAction="http://tempuri.org/IServicioConjugacion/ConsultaVerbosConNotaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ConsultaVerbosConNotaAsync(int idNota);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConjugacion/ConsultaNotasDeVerbo", ReplyAction="http://tempuri.org/IServicioConjugacion/ConsultaNotasDeVerboResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> ConsultaNotasDeVerboAsync(int idInfinitivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioConjugacion/ConsultaConjugacion", ReplyAction="http://tempuri.org/IServicioConjugacion/ConsultaConjugacionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ConexionConjugador.InfoConjugacion>> ConsultaConjugacionAsync(int idInfinitivo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IServicioConjugacionChannel : ConexionConjugador.IServicioConjugacion, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ServicioConjugacionClient : System.ServiceModel.ClientBase<ConexionConjugador.IServicioConjugacion>, ConexionConjugador.IServicioConjugacion
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicioConjugacionClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicioConjugacionClient.GetBindingForEndpoint(endpointConfiguration), ServicioConjugacionClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioConjugacionClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicioConjugacionClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioConjugacionClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicioConjugacionClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioConjugacionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ConsultaDefinicionAsync(int idDefinition)
        {
            return base.Channel.ConsultaDefinicionAsync(idDefinition);
        }
        
        public System.Threading.Tasks.Task<ConexionConjugador.Nota> ConsultaNotaAsync(int idNota)
        {
            return base.Channel.ConsultaNotaAsync(idNota);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> ConsultaVerbosConNotaAsync(int idNota)
        {
            return base.Channel.ConsultaVerbosConNotaAsync(idNota);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> ConsultaNotasDeVerboAsync(int idInfinitivo)
        {
            return base.Channel.ConsultaNotasDeVerboAsync(idInfinitivo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ConexionConjugador.InfoConjugacion>> ConsultaConjugacionAsync(int idInfinitivo)
        {
            return base.Channel.ConsultaConjugacionAsync(idInfinitivo);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioConjugacion))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_IServicioConjugacion))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServicioConjugacion))
            {
                return new System.ServiceModel.EndpointAddress("http://appstip.iatext.ulpgc.es/ServicioConjugacionWCF/ServicioConjugacion.svc");
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpsBinding_IServicioConjugacion))
            {
                return new System.ServiceModel.EndpointAddress("https://appstip.iatext.ulpgc.es/ServicioConjugacionWCF/ServicioConjugacion.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServicioConjugacion,
            
            BasicHttpsBinding_IServicioConjugacion,
        }
    }
}
